name: myPlanet build test

on:
  push:
    branches:
      - '*'
      - '!master'

jobs:
  build:
    name: myPlanet build test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build: [default, lite]
    env:
      STRINGS: |
        app/src/main/res/values/strings.xml
        app/src/main/res/values-ar/strings.xml
        app/src/main/res/values-es/strings.xml
        app/src/main/res/values-fr/strings.xml
        app/src/main/res/values-ne/strings.xml
        app/src/main/res/values-so/strings.xml
      LITES: |
        app/src/main/AndroidManifest.xml
        app/src/main/java/org/ole/planet/myplanet/base/PermissionActivity.kt
        app/src/main/java/org/ole/planet/myplanet/base/BaseContainerFragment.kt
        app/src/main/java/org/ole/planet/myplanet/ui/dashboard/DashboardActivity.kt

    steps:
      - name: checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: check for strings diffs
        run: |
          #lines=$(wc -l <<<"${{ env.STRINGS }}" | xargs)
          #for file in ${{ env.STRINGS }}; do
          #  if [ $(wc -l < "$file" | xargs) -ne $lines ]; then
          #    echo "line count mismatch in $file"
          #    exit 1
          # fi
          #done
          echo 1
          base_file=$(echo "${{ env.STRINGS }}" | head -n 1)
          echo 2
          base_lines=$(wc -l < "$base_file")
          echo 3
          echo "Base file: $base_file with $base_lines lines"
          echo 4
          while IFS= read -r file; do
            file_lines=$(wc -l < "$file")
            echo "Checking $file with $file_lines lines"
            if [ "$base_lines" -ne "$file_lines" ]; then
              echo "Line count mismatch: $file has $file_lines lines, expected $base_lines"
              exit 1
            fi
          done <<< "${{ env.STRINGS }}"

      - name: check for .lite diffs
        if: matrix.build == 'lite'
        run: |
          echo "${{ env.LITES }}" | xargs -n 1 | while read file; do
            ls -al $file*
            diff <(sed 's/^\s*\/\///; s/^\s*<!--//; s/-->\s*$//' "$file") <(sed 's/^\s*\/\///; s/^\s*<!--//; s/-->\s*$//' "$file.lite")
          done

      - name: setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: setup gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7
          cache-disabled: false
          cache-read-only: false
          cache-write-only: false

      - name: diff the code to get lite
        if: matrix.build == 'lite'
        run: |
          ls -al app/build.gradle
          sed -i 's/\(versionName "[0-9.]\+\)"/\1-lite"/' app/build.gradle
          echo "${{ env.LITES }}" | xargs -n 1 | while read file; do
            ls -al $file*
            cp "${file}.lite" "$file"
          done

      - name: build debug as test
        run: ./gradlew assembleDebug --configuration-cache --no-daemon --warning-mode all --stacktrace
