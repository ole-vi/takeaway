name: myPlanet release

on: 
  push:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  release:
    name: myPlanet release
    runs-on: ubuntu-latest

    env:
      ANDROID_NDK_VERSION: "21.3.6528147"
      BUILD_TOOLS_VERSION: "30.0.2"

    steps:
      - name: checkout repository code
        uses: actions/checkout@v4

      - name: set more env
        run: echo "BRANCHNAME="${GITHUB_REF##*/} >> $GITHUB_ENV

      - name: expose version from build.gradle
        uses: dogi/expose-android-build.gradle-version-code-and-name@v1.0.1
        with:
          expose-version-name: 'true'
          expose-version-code: 'true'

      - name: setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: install NDK
        run: |
          echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;${ANDROID_NDK_VERSION}" --sdk_root=${ANDROID_SDK_ROOT}
          chmod +x ./gradlew

      - name: build release AAB and APK
        run: |
          ./gradlew assembleRelease bundleRelease
          ls -alR app/build/outputs/apk
          ls -alR app/build/outputs/bundle
          mkdir -p build/release/signed
          cp app/build/outputs/apk/release/myPlanet-build.apk build/release/signed/

      - name: sign release APK
        uses: dogi/sign-android-release@v3.0.1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: sign release AAB
        uses: dogi/sign-android-release@v3.0.1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: copy builds to directory and generate sha256
        run: |
          ls -alR app/build/outputs/apk
          ls -alR app/build/outputs/bundle
          cp app/build/outputs/bundle/release/app-release.aab build/release/signed/myPlanet.aab
          cp app/build/outputs/apk/release/myPlanet-build.apk build/release/signed/myPlanet.apk
          cd build/release/signed/
          sha256sum myPlanet.apk > myPlanet.apk.sha256
          sha256sum myPlanet.aab > myPlanet.aab.sha256
          cd -
          ls -alR build/release/signed

      - name: publish to playstore
        if: github.ref == 'refs/heads/master'
        uses: r0adkll/upload-google-play@v1.1.1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: org.ole.planet.myplanet
          releaseFiles: build/release/signed/myPlanet.aab
          track: internal
          releaseName: "${{ env.ANDROID_VERSION_CODE }} (${{ env.ANDROID_VERSION_NAME }})"
          status: completed

      - name: rename APK/AAB with version and branch for artifact
        if: github.ref != 'refs/heads/master'
        run: |
          mv build/release/signed/myPlanet.apk build/release/signed/myPlanet-${{ env.ANDROID_VERSION_NAME }}-${{ env.BRANCHNAME }}.apk
          mv build/release/signed/myPlanet.apk.sha256 build/release/signed/myPlanet-${{ env.ANDROID_VERSION_NAME }}-${{ env.BRANCHNAME }}.apk.sha256
          mv build/release/signed/myPlanet.aab build/release/signed/myPlanet-${{ env.ANDROID_VERSION_NAME }}-${{ env.BRANCHNAME }}.aab
          mv build/release/signed/myPlanet.aab.sha256 build/release/signed/myPlanet-${{ env.ANDROID_VERSION_NAME }}-${{ env.BRANCHNAME }}.aab.sha256
          ls -alR build/release/signed

      - name: upload APK/AAB as build artifact
        if: github.ref != 'refs/heads/master'
        uses: actions/upload-artifact@v3
        with:
          name: myPlanet-${{ env.ANDROID_VERSION_NAME }}-${{ env.BRANCHNAME }}
          path: build/release/signed/*
          retention-days: 9

      - name: release signed APK and AAB on GitHub
        if: github.ref == 'refs/heads/master'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/release/signed/*
          tag: v${{ env.ANDROID_VERSION_NAME }}
          overwrite: 'true'
          file_glob: 'true'
